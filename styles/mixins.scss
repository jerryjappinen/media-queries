@mixin active-effect($className) {
  .#{$className} {
    .code-sample {
      text-decoration: underline;
      opacity: 1;
    }

    .tag-match {
      display: inline-block;
    }
  }
}

@mixin inactive-effect($className) {
  .app-matching-only {
    .#{$className} {
      display: none !important;
    }
  }
}

@mixin active-effect-selector($property, $value: null) {
  @if ($value == null) {
    @media (#{$property}) {
      @include active-effect(test-#{$property}-void);
    }
    @media not (#{$property}) {
      @include inactive-effect(test-#{$property}-void);
    }
  } @else {
    $cls: str-replace(str-replace(to-str($value), "/", "-"), " ", "-");
    @media (#{$property}: #{$value}) {
      @include active-effect(test-#{$property}-#{$cls});
    }
    @media not (#{$property}: #{$value}) {
      @include inactive-effect(test-#{$property}-#{$cls});
    }
  }
}

@mixin generate-active-effect-selectors($queries) {
  @each $property, $values in $queries {
    @each $value in $values {
      @include active-effect-selector($property, $value);
    }
  }
}

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

@function to-str($value) {
  @if type-of($value) == "number" {
    @return #{$value};
  } @else if type-of($value) == "string" {
    @return $value;
  } @else {
    @error 'Input #{$value} is no number or string';
  }
}
